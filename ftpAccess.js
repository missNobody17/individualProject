const fetch=(...t)=>import("node-fetch").then((({default:e})=>e(...t))),months_len_day=[31,28,31,30,31,30,31,31,30,31,30,31],stations={0:"nwc",2:"npm",4:"jji",6:"jjy"},coord={jjy:{lat:37.372557,long:140.849007},jji:{lat:32.092247,long:130.829095},nwc:{lat:-21.816325,long:114.16546},npm:{lat:21.420382,long:-158.153912}},convertTime12to24=t=>{const[e,n]=t.split(" ");let[s,o,a]=e.split(":");return"12"===s&&(s="00"),"PM"===n&&(s=parseInt(s,10)+12),`${s}.${o}`},convertToInterval=t=>{const e=convertTime12to24(t);let n=Math.floor(e),s=Math.round(100*(e-n)),o=12*n+.2*s;return o<0&&(o+=288),o=parseInt(o,10),[o,[n,s]]},getSunsetSunrise=async(t,e,n,s)=>{const o=[],a=[],l=stations[n];try{if(s&&"undefined"!==s){const n=`https://api.sunrise-sunset.org/json?lat=${coord[l].lat}lng=${coord[l].long}&date=${e}-${t}-${s}`,i=await fetch(n),r=(await i.json()).results;Boolean(r.astronomical_twilight_begin)&&(o.push([convertToInterval(r.astronomical_twilight_end)[0],convertToInterval(r.astronomical_twilight_begin)[0],convertToInterval(r.nautical_twilight_end)[0],convertToInterval(r.nautical_twilight_begin)[0]]),a.push([convertToInterval(r.astronomical_twilight_end)[1],convertToInterval(r.astronomical_twilight_begin)[1],convertToInterval(r.nautical_twilight_end)[1],convertToInterval(r.nautical_twilight_begin)[1]]))}}catch(t){console.log(t)}return[o,a]},removeDay=async(t,e,n,s,o)=>{try{const a=await getSunsetSunrise(e,n,s,o);if(a&&a.length>0)return a[0][0][0]===a[0][0][1]?(t.splice(a[0][0][3],a[0][0][2]-a[0][0][3]),[t,[a[1][0][3],a[1][0][2]]]):(t.splice(a[0][0][1],a[0][0][0]-a[0][0][1]),[t,[a[1][0][1],a[1][0][0]]])}catch(t){console.log(t)}return[]},getResponse=async t=>{let e;try{const n=await fetch(t);e=await await n.text()}catch(t){console.log(t)}return e},getElectrons=async(t,e,n,s,o,a,l)=>{let i=months_len_day[t],r=t;t=parseInt(t,10)+1;let c=[];const g=[],h=[];let p=[];n="undefined"===n?void 0:parseInt(n,10),a="undefined"===(l="undefined"===l?void 0:parseInt(l,10))?void 0:parseInt(a,10);try{t=t>10?t:`0${t}`;const n=e>2010?`https://satdat.ngdc.noaa.gov/sem/goes/data/avg/${e}/${t}/goes15/csv/g15_epead_e13ew_5m_${e}${t}01_${e}${t}${i}.csv`:`https://satdat.ngdc.noaa.gov/sem/goes/data/avg/${e}/${t}/goes12/csv/g12_eps_5m_${e}${t}01_${e}${t}${i}.csv`,s=(await getResponse(n)).split("\n"),o=s.findIndex((t=>"data: \r"===t));g.push(...s.slice(o+1))}catch(t){console.log(t)}for(let t of g){let n=e>2010?parseFloat(t.split(",")[12]):parseFloat(t.split(",")[2]);c.push(n)}if(c=n?1===parseInt(n,2)?0===c.length?c:c.slice(1,288):0===c.length?c:c.slice(288*(n-1),288*n+1):a&&l?1===a?0===c.length?c:c.slice(1,288*l):0===c.length?c:c.slice(288*(a-1),288*l):0===c.length?c:c.slice(1),!Boolean(n)&&"night"===s&&void 0===a&&void 0===l){for(let t=1;t<=i;t++)if(1===t){let n=await removeDay(c.slice(1,288),r,e,o,t);h.push(n[0].length),p.push(...n[0])}else{let n=await removeDay(c.slice(288*(t-1),288*t+1),r,e,o,t);h.push(n[0].length),p.push(...n[0])}return[p,h]}if("night"===s&&a&&l){for(let t=1;t<=l-a+1;t++)try{if(1===t){let n=await removeDay(c.slice(1,288),r,e,o,t);h.push(n[0].length),p.push(...n[0])}else{let n=await removeDay(c.slice(288*(t-1),288*t+1),r,e,o,t);h.push(n[0].length),p.push(...n[0])}}catch(t){console.log(t)}return[p,h]}if("night"===s&&Boolean(n))try{let t=await removeDay(c,r,e,o,n);return[t[0],[parseFloat(String(t[1][0][0])+"."+String(t[1][0][1])),parseFloat(String(t[1][1][0])+"."+String(t[1][1][1]))]]}catch(t){console.log(t)}return[c,h]},getProtons=async(t,e,n,s,o,a,l)=>{let i=months_len_day[t],r=t;t=parseInt(t,10)+1;let c=[];const g=[];let h=[];const p=[];let d;n="undefined"===n?void 0:parseInt(n,10),a="undefined"===(l="undefined"===l?void 0:parseInt(l,10))?void 0:parseInt(a,10);try{t=t>10?t:`0${t}`;let n=e>2010?`https://satdat.ngdc.noaa.gov/sem/goes/data/avg/${e}/${t}/goes15/csv/g15_epead_cpflux_5m_${e}${t}01_${e}${t}${i}.csv`:`https://satdat.ngdc.noaa.gov/sem/goes/data/avg/${e}/${t}/goes12/csv/g12_eps_5m_${e}${t}01_${e}${t}${i}.csv`;const s=(await getResponse(n)).split("\n"),o=s.findIndex((t=>"data: \r"===t));d=e>2010?s.slice(o+1)[0].split(",").findIndex((t=>"ZPGT5E"===t)):s.slice(o+1)[0].split(",").findIndex((t=>"p5_flux_c"===t)),g.push(...s.slice(o+1))}catch(t){console.log(t)}for(let t of g){let e=parseFloat(t.split(",")[d]);c.push(e)}if(c=n?1===n?0===c.length?c:c.slice(1,288):0===c.length?c:c.slice(288*(n-1),288*n+1):a&&l?1===a?0===c.length?c:c.slice(1,288*l):0===c.length?c:c.slice(288*(a-1),288*l):0===c.length?c:c.slice(1),!Boolean(n)&&"night"===s&&void 0===a&&void 0===l){for(let t=1;t<=i;t++)if(1===t){let n=await removeDay(c.slice(1,288),r,e,o,t);p.push(n[0].length),h.push(...n[0])}else{let n=await removeDay(c.slice(288*(t-1),288*t+1),r,e,o,t);p.push(n[0].length),h.push(...n[0])}return h}if("night"===s&&a&&l){for(let t=1;t<=l-a+1;t++)if(1===t){let n=await removeDay(c.slice(1,288),r,e,o,t);p.push(n[0].length),h.push(...n[0])}else{let n=await removeDay(c.slice(288*(t-1),288*t+1),r,e,o,t);p.push(n[0].length),h.push(...n[0])}return h}return"night"===s&&Boolean(n)?(await removeDay(c,r,e,o,n))[0]:c};module.exports={getElectrons,getProtons};